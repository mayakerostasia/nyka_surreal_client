name: Docs

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # schedule:
  #   - cron: '23 11 * * *'
  push:
    # branches: [ "repo_dispatch" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master", "prod" ]


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPO_NAME: ${{ github.event.repository.name }}
  SHORT_REF: $( echo ${{ github.ref }} | awk -F'/' '{print $3}')
  DOCS_REPO: BlueBastion/OPS-Generated_Docs

jobs:
  build-docs:
    name: Build Docs for Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.RUNNER_10_2_4_50_SSH }}

      - name: toolchain-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        if: steps.toolchain-cache.outputs.cache-hit != 'true'
        with:
            toolchain: nightly
            override: true
            profile: minimal
            components: rust-docs

      - name: Run cargo doc
        if: steps.toolchain-cache.outputs.cache-hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: doc 
          args: --no-deps --document-private-items --all-features --target-dir ./target/${{ env.REPO_NAME }}

      - name: Dump directory
        run: echo "$(ls -la target/${{ env.REPO_NAME }})"

      - name: Upload Docs artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPO_NAME }}-docs
          path: target/${{ env.REPO_NAME }}/doc/**

  send-dispatch:
    name: Send Repo Dispatch for Docs
    runs-on: ubuntu-latest
    needs: [ build-docs ]
    steps:
      - name: Initiate Repo Dispatch
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.READ_ARTIFACTS_PAT }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ env.DOCS_REPO }}/dispatches \
          -d "{ \"event_type\": \"pull-docs\", \"client_payload\": { \"run_id\": \"${{ github.run_id }}\", \"repository\": \"${{ github.repository }}\" } }"